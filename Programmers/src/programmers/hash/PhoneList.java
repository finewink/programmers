package programmers.hash;

import java.util.Arrays;
import java.util.Comparator;

/**
전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.

구조대 : 119
박준영 : 97 674 223
지영석 : 11 9552 4421
전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.

제한 사항
phone_book의 길이는 1 이상 1,000,000 이하입니다.
각 전화번호의 길이는 1 이상 20 이하입니다.
*/
public class PhoneList {
	public static void main(String[] args) {
//		String[] phone_book = new String[] {"119", "97674223", "11911122", "1195524421"};
		String[] phone_book = new String[] {"123","456","789"};
		
		PhoneList app = new PhoneList();
		boolean valid = app.solution(phone_book);
		
		System.out.println(valid);
	}
	
	public boolean solution(String[] phone_book) {
        boolean answer = true;
        
        //길이 및 순서 순 정렬
        Arrays.sort(phone_book, new Comparator<String>() {
 
			@Override
			public int compare(String o1, String o2) {
				if(o1.length() > o2.length()) {
					return 9;
				}
				else if(o1.length() == o2.length()) {
					return String.CASE_INSENSITIVE_ORDER.compare(o1, o2);
				}
				else{
					return -1;
				}
			}
        	
		});
        
        //배열을 순회하며 startWith를 이용해 존재여부 확인
        for(int i = 0 ; i < phone_book.length ; i++) {
        	for(int j = i + 1 ; j < phone_book.length ; j++) {
        		if(phone_book[j].startsWith(phone_book[i])) {
        			answer = false;
        			break;
        		} 
        	}
        }
        
        return answer;
    }
}
